subsets
Write a function, subsets, that takes in a vector as an argument. The function should return a 2D vector where each subvector represents one of the possible subsets of the input vector.

The elements within the subsets and the subsets themselves may be returned in any order.

You may assume that the input vector contains unique elements.

test_00:
subsets(std::vector<std::string> { "a", "b" }); // ->
// [ 
//   [], 
//   [ "b" ], 
//   [ "a" ], 
//   [ "a", "b" ] 
// ]
test_01:
subsets(std::vector<std::string> { "a", "b", "c" }); // ->
// [
//   [],
//   [ "c" ],
//   [ "b" ],
//   [ "b", "c" ],
//   [ "a" ],
//   [ "a", "c" ],
//   [ "a", "b" ],
//   [ "a", "b", "c" ]
// ]
test_02:
subsets(std::vector<std::string> { "x" }); // ->
// [ 
//   [], 
//   [ "x" ] 
// ]
test_03:
subsets(std::vector<std::string> {  }); // ->
// [ 
//   []
// ]
test_04:
subsets(std::vector<std::string> { "q", "r", "s", "t" }); // ->
// [
//   [],
//   [ "t" ],
//   [ "s" ],
//   [ "s", "t" ],
//   [ "r" ],
//   [ "r", "t" ],
//   [ "r", "s" ],
//   [ "r", "s", "t" ],
//   [ "q" ],
//   [ "q", "t" ],
//   [ "q", "s" ],
//   [ "q", "s", "t" ],
//   [ "q", "r" ],
//   [ "q", "r", "t" ],
//   [ "q", "r", "s" ],
//   [ "q", "r", "s", "t" ]
// ]